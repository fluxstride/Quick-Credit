{
  /* <div id="loan-details" class="modal">
  <div class="backdrop" data-modal="loan_details">
    <div class="content">
      <div class="header">
        <div class="title">
          <img src="./assets/images/loan_details.svg" alt="" />
          <h3>Loan details</h3>
        </div>
        <div class="close" onclick="closeModal('loan_details')">
          <img src="./assets/images/cross.svg" alt="" />
        </div>
      </div>
      <div class="body">
        <div class="field">
          <p class="title">Loan ID:</p>
          <p>32</p>
        </div>
        <div class="field">
          <p class="title">Amount:</p>
          <p>500,000</p>
        </div>
        <div class="field">
          <p class="title">Interest:</p>
          <p>5%</p>
        </div>
        <div class="field">
          <p class="title">Tenor:</p>
          <p>12 months</p>
        </div>
        <div class="field">
          <p class="title">Installment Payment:</p>
          <p>43,750</p>
        </div>
        <div class="field">
          <p class="title">Status:</p>
          <p>Active</p>
        </div>
        <div class="field">
          <p class="title">Date:</p>
          <p>24/05/2023</p>
        </div>

        <a href=""> view repayment history </a>
      </div>
    </div>
  </div>

  modal_backdrop && modal_backdrop.addEventListener("click", (e) => { if
  (e.target === e.currentTarget) {
  modals[e.currentTarget.dataset["modal"]].style.display = "none";
  document.body.style.overflow = "auto"; } }); function openModal(modal) {
  modals[modal].style.display = "block"; document.body.style.overflow =
  "hidden"; } function closeModal(modal) { modals[modal].style.display = "none";
  document.body.style.overflow = "auto"; }
</div>

const modal_backdrop = document.querySelector(".backdrop"); const loan_details =
document.querySelector("#loan-details"); const modals = { loan_details, }; */
}

let data;

const password_show_btn = document.querySelector(".password-show");
const password = document.querySelector(".password input");

/**
 *  Password show and hide logic
 */

if (password_show_btn) {
  let show_password = false;

  password_show_btn.addEventListener("click", () => {
    if (!show_password) {
      password_show_btn.src = "./assets/images/eye-off.svg";
      password.type = "text";
      show_password = true;
      return;
    }
    password_show_btn.src = "./assets/images/eye-on.svg";
    password.type = "password";
    show_password = false;
  });
}

let data_table = document.querySelector(".data");
let thead = data_table && data_table.querySelector("table thead");
let tbody = data_table && data_table.querySelector("table tbody");

// Pagination variables
let activePage = 1;
let rowsPerPage = 10;
let count;
let totalPages;
let calculatedRows;

let table_pagination = document.querySelector(".table-pagination");

let rows_per_page_elem, pagination_buttons, prev_button, next_button;

if (table_pagination) {
  rows_per_page_elem = table_pagination.querySelector("select");
  pagination_buttons = table_pagination.querySelectorAll("button");
  prev_button = table_pagination.querySelector("#prev");
  next_button = table_pagination.querySelector("#next");

  rows_per_page_elem.addEventListener("change", (e) => {
    rowsPerPage = e.target.value * 1;
    activePage = 1;
    populateTable();
  });

  [...pagination_buttons].forEach((button) =>
    button.addEventListener("click", () => {
      if (button.id === "next") {
        activePage += 1;
      } else {
        activePage -= 1;
      }
      populateTable();
    })
  );
}

/**
 * Table tabs switching logic
 */
let loan_status = "Active";

let table_tabs = document.querySelectorAll(".table-tabs .tab");

table_tabs.forEach((tab) => {
  tab.addEventListener("click", () => {
    if (tab.innerText === loan_status) return;
    table_tabs.forEach((tab) => {
      if ([...tab.classList].includes("tab--active")) {
        tab.classList.remove("tab--active");
        return;
      }
      tab.classList.add("tab--active");
    });

    loan_status = tab.innerText;
    activePage = 1;
    rowsPerPage = 10;
    rows_per_page_elem.value = 10;
    populateTable();
  });
});

/**
 * Table population logic
 */
function populateTable() {
  thead.innerHTML = "";
  tbody.innerHTML = "";

  let table_to_display = data_table.dataset["table"];

  let table_data = { ...data[table_to_display] };

  if (table_to_display === "loans") {
    table_data.datas = table_data.datas.filter(
      (data) => data.status === loan_status
    );
  }

  count = table_data.datas.length;
  totalPages = Math.ceil(count / rowsPerPage);
  calculatedRows = table_data.datas.slice(
    (activePage - 1) * rowsPerPage,
    activePage * rowsPerPage
  );
  let beginning = activePage === 1 ? 1 : rowsPerPage * (activePage - 1) + 1;
  let end = activePage === totalPages ? count : beginning + rowsPerPage - 1;

  if (count <= 5) {
    table_pagination.style.visibility = "hidden";
  } else {
    table_pagination.style.visibility = "visible";
  }

  if (!(table_pagination.style.visibility === "hidden")) {
    if (activePage === 1) {
      prev_button.disabled = true;
    } else {
      prev_button.disabled = false;
    }

    if (activePage === Math.ceil((totalPages * rowsPerPage) / rowsPerPage)) {
      next_button.disabled = true;
    } else {
      next_button.disabled = false;
    }

    let page = table_pagination.querySelector(".page");
    page.innerText = `${beginning}-${end} of Page ${activePage}`;
  }

  let tr = document.createElement("tr");

  table_data["headings"].forEach((heading) => {
    let th = document.createElement("th");
    th.innerText = heading;
    tr.append(th);
  });

  thead.appendChild(tr);

  calculatedRows.forEach((data) => {
    tr = document.createElement("tr");
    let td;

    for (let key of Object.keys(data)) {
      td = document.createElement("td");
      td.innerText = data[key];
      tr.appendChild(td);
    }

    tbody.appendChild(tr);
  });
}

async function fetchData() {
  let res = await fetch("./assets/data.json");
  data = await res.json();
  data && populateTable();
}

if (data_table) {
  window.addEventListener("load", fetchData);
}
